// Code generated by MockGen. DO NOT EDIT.
// Source: ./lib/app/app.go
//
// Generated by this command:
//
//	mockgen -source=./lib/app/app.go -destination=./lib/app/mock_app.go -package=app
//

// Package app is a generated GoMock package.
package app

import (
	reflect "reflect"

	redis "github.com/go-redis/redis"
	mongo "go.mongodb.org/mongo-driver/mongo"
	gomock "go.uber.org/mock/gomock"
)

// MockIApp is a mock of IApp interface.
type MockIApp struct {
	ctrl     *gomock.Controller
	recorder *MockIAppMockRecorder
}

// MockIAppMockRecorder is the mock recorder for MockIApp.
type MockIAppMockRecorder struct {
	mock *MockIApp
}

// NewMockIApp creates a new mock instance.
func NewMockIApp(ctrl *gomock.Controller) *MockIApp {
	mock := &MockIApp{ctrl: ctrl}
	mock.recorder = &MockIAppMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIApp) EXPECT() *MockIAppMockRecorder {
	return m.recorder
}

// GetMongoDBClient mocks base method.
func (m *MockIApp) GetMongoDBClient() *mongo.Client {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMongoDBClient")
	ret0, _ := ret[0].(*mongo.Client)
	return ret0
}

// GetMongoDBClient indicates an expected call of GetMongoDBClient.
func (mr *MockIAppMockRecorder) GetMongoDBClient() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMongoDBClient", reflect.TypeOf((*MockIApp)(nil).GetMongoDBClient))
}

// GetMongoDBClients mocks base method.
func (m *MockIApp) GetMongoDBClients() map[string]*mongo.Client {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMongoDBClients")
	ret0, _ := ret[0].(map[string]*mongo.Client)
	return ret0
}

// GetMongoDBClients indicates an expected call of GetMongoDBClients.
func (mr *MockIAppMockRecorder) GetMongoDBClients() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMongoDBClients", reflect.TypeOf((*MockIApp)(nil).GetMongoDBClients))
}

// GetRedisClient mocks base method.
func (m *MockIApp) GetRedisClient() *redis.Client {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRedisClient")
	ret0, _ := ret[0].(*redis.Client)
	return ret0
}

// GetRedisClient indicates an expected call of GetRedisClient.
func (mr *MockIAppMockRecorder) GetRedisClient() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRedisClient", reflect.TypeOf((*MockIApp)(nil).GetRedisClient))
}
